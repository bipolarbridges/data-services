openapi: 3.0.0
info:
  title: Bipolar Bridges Data Services Interface
  version: '0.2'
  license:
    name: MIT
  description: Provides endpoints for general-purpose data import and acquisition within the BB infrastructure.
  contact:
    name: Rowan Lindsay
    email: rowdl22@students.cs.ubc.ca
servers: []
paths:
  /client:
    post:
      summary: Create a Client Reference. This tracks the unique user-identifier in the external management system (e.g. firebase).
      tags: []
      responses:
        '201':
          $ref: '#/components/responses/Created'
        '400':
          $ref: '#/components/responses/BadFormat'
        '403':
          $ref: '#/components/responses/NotAuthorized'
      operationId: post-client
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                id:
                  type: string
                  minLength: 1
              required:
                - id
            examples: {}
      security:
        - import-key: []
    get: 
      summary: Get information about a specific client
      tags: []
      responses:
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '200':
          description: Good
          content:
            application/json:
                schema:
                  description: 'Client info'
                  type: object
                  properties:
                    id:
                      type: string
                      minLength: 1
                  required:
                    - id
  /measurement:
    post:
      summary: Record Measurement. Allows for client specification of value type and asserts type-correctness on the server side.
      tags: []
      responses:
        '201':
          $ref: '#/components/responses/Created'
        '400':
          $ref: '#/components/responses/BadFormat'
        '403':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      operationId: post-measurement
      security:
        - import-key: []
      requestBody:
        content:
          application/json:
            schema:
              description: 'Measurement Request Contents'
              type: object
              properties:
                clientID:
                  type: string
                  minLength: 1
                data:
                  type: object
                  required:
                    - date
                    - value
                    - source
                  properties:
                    date:
                      type: number
                    value:
                      type: number
                    source:
                      type: string
                    subtype: 
                      type: string
              required:
                - clientID
                - data
  /domain: 
    post:
      summary: Records domains. 
      tags: []
      responses:
        '201':
          $ref: '#/components/responses/Created'
        '400':
          $ref: '#/components/responses/BadFormat'
        '403':
          $ref: '#/components/responses/NotAuthorized'
      operationId: post-domain
      security:
        - import-key: []
      requestBody:
        content:
          application/json:
            schema:
              description: 'Domain Request Contents'
              type: object
              required:
                - id
                - data
              properties:
                id:
                  type: string
                data:
                  type: object
                  required:
                    - bullets
                    - importance
                    - name
                    - scope
                  properties:
                    bullets: 
                      type: array
                      items:
                        type: string
                    importance:
                      type: string
                    name:
                      type: string
                    scope:
                      type: string
  /affirmation:
    post:
      summary: Records affirmations.
      tags: []
      responses:
        '201':
          $ref: '#/components/responses/Created'
        '400':
          $ref: '#/components/responses/BadFormat'
        '403':
          $ref: '#/components/responses/NotAuthorized'
      operationId: post-affirmation
      security:
        - import-key: []
      requestBody:
        content:
          application/json:
            schema:
              description: 'Affirmation Request Contents'
              type: object
              required:
                - id
                - data
              properties:
                id:
                  type: string
                data:
                  type: object
                  required:
                    - content
                    - domains
                    - keywords
                  properties:
                    domains: 
                      type: array
                      items:
                        type: string
                    keywords: 
                      type: array
                      items:
                        type: string
                    content:
                      type: string
  /affirmation/notif:
    post:
      summary: Record affirmation notifs.
      tags: []
      responses: 
        '201':
          $ref: '#/components/responses/Created'
        '400':
          $ref: '#/components/responses/BadFormat'
        '403':
          $ref: '#/components/responses/NotAuthorized'
      operationId: post-affirmation-notif
      security:
        - import-key: []
      requestBody:
        content:
          application/json:
            schema:
              description: 'Affirmation Notif Request Contents'
              type: object
              required:
                - id
                - data
              properties:
                id:
                  type: string
                data:
                  type: object
                  required:
                    - affirmationId
                    - userId
                    - date
                  properties:
                    affirmationId:
                      type: string
                    userId:
                      type: string
                    date:
                      type: number
components:
  schemas: 
    Message:
      type: object
      properties:
        message:
          type: string
          minLength: 1
      required:
        - message
  responses:
    NotFound:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Message'
    BadFormat:
      description: 'Error Cause'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Message'
    Created:
      description: 'Creation message'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Message'
    NotAuthorized:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Message'
            
  securitySchemes:
    import-key:
      name: Authorization
      type: apiKey
      in: header
